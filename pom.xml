<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <parent>
        <groupId>com.kingstar.cosmos</groupId>
        <artifactId>cosmos-parent</artifactId>
        <version>2.32.2.B05</version>
        <relativePath/>
    </parent>

    <groupId>com.kingstar.quantitative</groupId>
    <artifactId>strategy-module</artifactId>
    <version>VS.${revision}</version>
    <name>strategy-module</name>
    <modules>
        <module>spelling-test</module>
    </modules>
    <properties>
        <spring-cloud.version>2021.0.3</spring-cloud.version>
        <spring-framework.version>5.3.39</spring-framework.version>
        <docker.url>hub.kingstarfintech.com/kingstar-quantitative-trading</docker.url>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <opencsv.version>4.3.2</opencsv.version>
        <ks.flow.version>3.2.9</ks.flow.version>
        <commons.lang.version>2.6</commons.lang.version>
        <pagehelper-springboot.version>1.4.1</pagehelper-springboot.version>
        <pagehelper.version>5.3.1</pagehelper.version>
        <mybatis-springboot.version>2.2.0</mybatis-springboot.version>
        <mysql.version>8.0.28</mysql.version>
        <java.jwt.version>3.1.0</java.jwt.version>
        <jjwt.version>0.9.0</jjwt.version>
        <hutool.all.version>5.8.21</hutool.all.version>
        <okhttp.version>4.9.3</okhttp.version>
        <spring-cloud-alibaba.version>2021.0.5.0</spring-cloud-alibaba.version>
        <nacos.version>1.4.1</nacos.version>
        <!--        <spring-cloud-alibaba-dependencies.version>2021.1</spring-cloud-alibaba-dependencies.version>-->
        <!--        <open.feign.version>2021.0.5.0</open.feign.version>-->
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <guava-version>31.1-jre</guava-version>
        <jackson-databind-version>2.13.5</jackson-databind-version>
        <jackson-core-version>2.13.5</jackson-core-version>
        <logback.version>1.2.13</logback.version>
        <univocity-parsers-version>2.9.0</univocity-parsers-version>
        <common.module.version>VC.${revision}</common.module.version>
        <basic.module.version>VB.${revision}</basic.module.version>
        <strategy.module.version>VS.${revision}</strategy.module.version>
        <factor.module.version>VF.${revision}</factor.module.version>
        <ceres.mq.support.version>2.32.2.B13</ceres.mq.support.version>
        <lombok.version>1.18.12</lombok.version>
        <spring-boot.version>2.7.14</spring-boot.version>
        <revision>2.0.5</revision>
        <netty.version>4.1.115.FINAL</netty.version>
        <tongweb.version>7.0.E.6_P6</tongweb.version>
        <netty.version>4.1.108.Final</netty.version>
        <okio.version>3.6.0</okio.version>
        <yaml.version>2.0</yaml.version>
        <tomcat.version>9.0.98</tomcat.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <xmlbeans.version>3.0.2</xmlbeans.version>
        <postgresql.version>42.3.9</postgresql.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <mysql.version>8.2.0</mysql.version>
        <commons-fileupload.version>1.5</commons-fileupload.version>
        <bcprov-jdk18on.version>1.78</bcprov-jdk18on.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Framework Components -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring-framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bcprov-jdk18on.version}</version>
            </dependency>
            <dependency>
                <artifactId>commons-fileupload</artifactId>
                <groupId>commons-fileupload</groupId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>protobuf-java</artifactId>
                        <groupId>com.google.protobuf</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <artifactId>xmlbeans</artifactId>
                <groupId>org.apache.xmlbeans</groupId>
                <version>${xmlbeans.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <artifactId>tomcat-embed-core</artifactId>
                <groupId>org.apache.tomcat.embed</groupId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <artifactId>tomcat-embed-el</artifactId>
                <groupId>org.apache.tomcat.embed</groupId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <artifactId>tomcat-embed-websocket</artifactId>
                <groupId>org.apache.tomcat.embed</groupId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-unix-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <!-- Logback核心依赖 -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>1.1.10.5</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${yaml.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava-version}</version>
            </dependency>
            <!--map struct 依赖-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- csv文件解析依赖 -->
            <dependency>
                <groupId>com.opencsv</groupId>
                <artifactId>opencsv</artifactId>
                <version>${opencsv.version}</version>
            </dependency>

            <!--lang 工具包-->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>

            <!-- pagehelper :分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-springboot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.github.pagehelper</groupId>
                        <artifactId>pagehelper</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- jwt -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java.jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.all.version}</version>
            </dependency>

            <!-- okhttp -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>

            <!--定时任务quartz-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-quartz</artifactId>
                <version>2.2.6.RELEASE</version>
            </dependency>
            <!-- CSV 解析工具 -->
            <dependency>
                <groupId>com.univocity</groupId>
                <artifactId>univocity-parsers</artifactId>
                <version>${univocity-parsers-version}</version>
            </dependency>
        </dependencies>

    </dependencyManagement>
    <profiles>
        <profile>
            <!-- 开发环境 -->
            <id>dev</id>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <spring.profiles.active>test</spring.profiles.active>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source><!-- 源代码使用的开发版本 -->
                    <target>${java.version}</target><!-- 需要生成的目标class文件的编译版本 -->
                    <encoding>UTF-8</encoding>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>